substitutions:
    friendly_name: "Bench PSU"
    device_name: "bench-psu"

packages:
    custom: !include base/custom.yaml

logger:
    baud_rate: 0
    level: INFO

esphome:
    platformio_options:
        board_build.f_cpu: 160000000L

esp8266:
    board: esp12e

uart:
    baud_rate: 115200
    tx_pin: TX
    rx_pin: RX

modbus:

modbus_controller:
  - id: modbus_psu
    address: 0x1
    setup_priority: -10
    update_interval: 1s

sensor:
  - platform: modbus_controller
    modbus_controller_id: modbus_psu
    name: "${friendly_name} PSU type"
    register_type: holding
    address: 0
    value_type: U_WORD
    skip_updates: 255
  - platform: modbus_controller
    modbus_controller_id: modbus_psu
    name: "${friendly_name} PSU Serial"
    register_type: holding
    address: 1
    value_type: U_DWORD
    skip_updates: 255
  - platform: modbus_controller
    modbus_controller_id: modbus_psu
    name: "${friendly_name} PSU firmware"
    register_type: holding
    address: 3
    value_type: U_WORD
    accuracy_decimals: 2
    skip_updates: 255
    filters:
        - multiply: 0.01
  - platform: modbus_controller
    modbus_controller_id: modbus_psu
    name: "${friendly_name} Internal Temperature"
    unit_of_measurement: 째C
    device_class: temperature
    register_type: holding
    address: 4
    value_type: S_DWORD
#   - platform: modbus_controller
#     modbus_controller_id: modbus_psu
#     name: "${friendly_name} Internal Temperature"
#     unit_of_measurement: 째F
#     device_class: temperature
#     register_type: holding
#     address: 6
#     value_type: S_DWORD
  - platform: modbus_controller
    modbus_controller_id: modbus_psu
    name: "${friendly_name} Measured Voltage"
    unit_of_measurement: V
    device_class: voltage
    register_type: holding
    address: 10
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
        - multiply: 0.01
  - platform: modbus_controller
    modbus_controller_id: modbus_psu
    name: "${friendly_name} Measured Current"
    unit_of_measurement: A
    device_class: current
    register_type: holding
    address: 11
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
        - multiply: 0.01
  - platform: modbus_controller
    modbus_controller_id: modbus_psu
    name: "${friendly_name} Measured Power"
    unit_of_measurement: W
    device_class: power
    register_type: holding
    address: 13
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
        - multiply: 0.01
  - platform: modbus_controller
    modbus_controller_id: modbus_psu
    name: "${friendly_name} Input Voltage"
    unit_of_measurement: V
    device_class: voltage
    register_type: holding
    address: 14
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
        - multiply: 0.01
  - platform: modbus_controller
    modbus_controller_id: modbus_psu
    name: "${friendly_name} Measured Battery Voltage"
    unit_of_measurement: V
    device_class: voltage
    register_type: holding
    address: 33
    value_type: U_WORD
  - platform: modbus_controller
    modbus_controller_id: modbus_psu
    name: "${friendly_name} External Temperature"
    unit_of_measurement: 째C
    device_class: temperature
    register_type: holding
    address: 34
    value_type: S_DWORD
#   - platform: modbus_controller
#     modbus_controller_id: modbus_psu
#     name: "${friendly_name} External Temperature"
#     unit_of_measurement: 째F
#     device_class: temperature
#     register_type: holding
#     address: 36
#     value_type: S_DWORD
  - platform: modbus_controller
    modbus_controller_id: modbus_psu
    name: "${friendly_name} Measured Capacity"
    unit_of_measurement: Ah
    register_type: holding
    address: 38
    value_type: U_DWORD
    accuracy_decimals: 3
    filters:
        - multiply: 0.001
  - platform: modbus_controller
    modbus_controller_id: modbus_psu
    name: "${friendly_name} Measured Energy"
    unit_of_measurement: Wh
    device_class: energy
    register_type: holding
    address: 40
    value_type: U_DWORD
    accuracy_decimals: 3
    filters:
        - multiply: 0.001

binary_sensor:
  - platform: modbus_controller
    modbus_controller_id: modbus_psu
    name: "${friendly_name} OVP Tripped"
    device_class: problem
    bitmask: 1
    register_type: holding
    address: 16
  - platform: modbus_controller
    modbus_controller_id: modbus_psu
    name: "${friendly_name} OCP Tripped"
    device_class: problem
    bitmask: 2
    register_type: holding
    address: 16
  - platform: modbus_controller
    modbus_controller_id: modbus_psu
    name: "${friendly_name} Output CC Mode"
    bitmask: 1
    register_type: holding
    address: 17
  - platform: modbus_controller
    modbus_controller_id: modbus_psu
    name: "${friendly_name} Battery Mode"
    register_type: holding
    address: 32

number:
  - platform: modbus_controller
    modbus_controller_id: modbus_psu
    name: "${friendly_name} Set Voltage"
    unit_of_measurement: V
    device_class: voltage
    register_type: holding
    address: 8
    value_type: U_WORD
    min_value: 0.00
    max_value: 60.00
    step: 0.01
    multiply: 100
  - platform: modbus_controller
    modbus_controller_id: modbus_psu
    name: "${friendly_name} Set Current"
    unit_of_measurement: A
    device_class: current
    register_type: holding
    address: 9
    value_type: U_WORD
    step: 0.01
    min_value: 0.00
    max_value: 18.00
    multiply: 100

switch:
  - platform: modbus_controller
    modbus_controller_id: modbus_psu
    name: "${friendly_name} Output Enable"
    register_type: holding
    address: 18
    bitmask: 1
