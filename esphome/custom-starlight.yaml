substitutions:
  friendly_name: "Starlight"
  device_name: "starlight"

packages:
  custom: !include base/custom.yaml

esp32:
  board: wemos_d1_mini32
  framework:
    type: esp-idf

api:
  reboot_timeout: 0s

wifi:
  ap:
    ssid: Starlight_A4C138D5FDE8_Hotspot
    password: !secret starlight_password

captive_portal:

web_server:
  auth:
    username: starlight
    password: !secret starlight_password
  local: true
  version: 3
  include_internal: false

esp32_ble_tracker:

ble_client:
  - mac_address: a4:c1:38:d5:fd:e8
    id: telink_ble
    on_connect: 
      then:
        - delay: 1ms
        - script.execute: telink_ble_send_pairing
        - script.wait: telink_ble_send_pairing
        - delay: 1ms
        - component.update: blisslights_pairing
        - delay: 1ms
        - script.execute: telink_ble_enable_notify
        - script.wait: telink_ble_enable_notify
    on_disconnect: 
      then:
        - lambda: |-
            ((esphome::telink::Telink*)id(telink_light))->shutdown();

binary_sensor:
  - platform: telink
    id: telink_light
    name: "${friendly_name} BLE Connected"
    ble_id: telink_ble
    send_command_id: telink_ble_send_command
    mac: "\xa4\xc1\x38\xd5\xfd\xe8"
    telink_name: "HMS56WVBEQN2FBG"

light:
  - platform: rgb
    name: "${friendly_name} Nebula"
    red: light_red
    green: light_green
    blue: light_blue
    default_transition_length: 0s
    flash_transition_length: 0s
    restore_mode: RESTORE_DEFAULT_ON
  - platform: monochromatic
    name: "${friendly_name} Stars"
    output: light_laser
    default_transition_length: 0s
    flash_transition_length: 0s
    restore_mode: RESTORE_DEFAULT_ON
  
fan:
  - platform: speed
    output: light_motor
    name: "${friendly_name} Motor"
    restore_mode: RESTORE_DEFAULT_ON

switch:
  - platform: output
    output: light_breathe
    name: "${friendly_name} Breathe"
    restore_mode: RESTORE_DEFAULT_OFF

sensor:
  - platform: ble_client
    type: characteristic
    ble_client_id: telink_ble
    update_interval: never
    internal: true
    notify: true
    service_uuid: 00010203-0405-0607-0809-0a0b0c0d1910
    characteristic_uuid: 00010203-0405-0607-0809-0a0b0c0d1911
    id: blisslights_notify
    lambda: |-
      return ((esphome::telink::Telink*)id(telink_light))->handle_notify(x);
  - platform: ble_client
    type: characteristic
    ble_client_id: telink_ble
    update_interval: never
    internal: true
    notify: false
    service_uuid: 00010203-0405-0607-0809-0a0b0c0d1910
    characteristic_uuid: 00010203-0405-0607-0809-0a0b0c0d1914
    id: blisslights_pairing
    lambda: |-
      return ((esphome::telink::Telink*)id(telink_light))->handle_pairing_data(x);

script:
  - id: telink_ble_enable_notify
    mode: single
    then:
      - ble_client.ble_write:
          id: telink_ble
          service_uuid: 00010203-0405-0607-0809-0a0b0c0d1910
          characteristic_uuid: 00010203-0405-0607-0809-0a0b0c0d1911
          value: [0x01]
  - id: telink_set_light
    mode: queued
    then:
      - lambda: !lambda |-
          ((esphome::telink::Telink*)id(telink_light))->set_light();
  - id: telink_ble_send_command
    mode: queued
    parameters:
      payload: uint8_t[]
    then:
      - ble_client.ble_write:
          id: telink_ble
          service_uuid: 00010203-0405-0607-0809-0a0b0c0d1910
          characteristic_uuid: 00010203-0405-0607-0809-0a0b0c0d1912
          value: !lambda |-
            return payload;
  - id: telink_ble_send_pairing
    mode: single
    then:
      - ble_client.ble_write:
          id: telink_ble
          service_uuid: 00010203-0405-0607-0809-0a0b0c0d1910
          characteristic_uuid: 00010203-0405-0607-0809-0a0b0c0d1914
          value: !lambda |-
            return ((esphome::telink::Telink*)id(telink_light))->make_pairing_data();
  
output:
  - platform: template
    id: light_red
    type: float
    write_action:
      then:
      - lambda: !lambda |-
          ((esphome::telink::Telink*)id(telink_light))->light_red = state * 255.0;
      - script.execute: telink_set_light
  - platform: template
    id: light_green
    type: float
    write_action:
      then:
      - lambda: !lambda |-
          ((esphome::telink::Telink*)id(telink_light))->light_green = state * 255.0;
      - script.execute: telink_set_light
  - platform: template
    id: light_blue
    type: float
    write_action:
      then:
      - lambda: !lambda |-
          ((esphome::telink::Telink*)id(telink_light))->light_blue = state * 255.0;
      - script.execute: telink_set_light
  - platform: template
    id: light_laser
    type: float
    write_action:
      then:
      - lambda: !lambda |-
          ((esphome::telink::Telink*)id(telink_light))->light_laser = state * 255.0;
      - script.execute: telink_set_light
  - platform: template
    id: light_motor
    type: float
    write_action:
      then:
      - lambda: !lambda |-
          ((esphome::telink::Telink*)id(telink_light))->light_motor = state * 255.0;
      - script.execute: telink_set_light
  - platform: template
    id: light_breathe
    type: binary
    write_action:
      then:
      - lambda: !lambda |-
          ((esphome::telink::Telink*)id(telink_light))->light_breathe = state;
      - script.execute: telink_set_light
